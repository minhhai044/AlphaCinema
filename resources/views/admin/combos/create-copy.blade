@extends('admin.layouts.master')
@section('title', 'Quản lý Combo')

@section('content')
    <!-- start page title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0 font-size-18">Thêm mới Combo</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item">
                            <a href="{{ route('admin.combos.index') }}">Combo</a>
                        </li>
                        <li class="breadcrumb-item active">Thêm mới Combo</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- end page title -->

    <form action="{{ route('admin.combos.store') }}" method="POST" enctype="multipart/form-data" id="comboForm">
        @csrf
        <div class="row">
            <div class="col-lg-9">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <!-- Combo details form -->
                            <div class="col-md-12 d-flex justify-content-between">
                                <label for="" class="form-label"></label>
                                <button type="button" class="btn btn-primary" id="add">Thêm đồ
                                    ăn</button>
                            </div>
                            <div id="food_list" class="col-md-12">
                                <!-- Các phần tử food sẽ được thêm vào đây -->
                                <p></p>
                            </div>


                            <div class="col-md-4 mb-3">
                                <div class="mb-3">
                                    <label for="name" class="form-label"><span class="text-danger">*</span>Tên Combo</label>
                                    <input type="text" name="name" id="name"
                                        class="form-control {{ $errors->has('name') ? 'is-invalid' : (old('name') ? 'is-valid' : '') }}"
                                        data-="" value="{{ old('name') }}" placeholder="Nhập tên món ăn">

                                    <div class="{{ $errors->has('name') ? 'invalid-feedback' : 'valid-feedback' }}">
                                        @if ($errors->has('name'))
                                            {{ $errors->first('name') }}
                                        @endif
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4 mb-3">
                                <label for="price" class="form-label ">Giá gốc (VNĐ)</label>
                                <input type="number" class="form-control bg-light" id="price" name="price" readonly>
                            </div>


                            <div class="col-md-4 mb-3">
                                <div class="mb-3">
                                    <label for="price_sale" class="form-label"><span class="text-danger">*</span>Giá
                                        bán (VNĐ)</label>
                                    <input type="text"
                                        class="form-control {{ $errors->has('price_sale') ? 'is-invalid' : (old('price_sale') ? 'is-valid' : '') }}"
                                        name="price_sale" id="price_sale" placeholder="Nhập giá tiền" value="{{ old('price_sale') }}"
                                        >
                                    <div class="{{ $errors->has('price_sale') ? 'invalid-feedback' : 'valid-feedback' }}">
                                        @if ($errors->has('price_sale'))
                                            {{ $errors->first('price_sale') }}
                                        @endif
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12 mb-3">
                            <label for="food-description" class="form-label">
                                <span class="required">*</span> Mô tả
                            </label>
                            <textarea
                                class="form-control {{ $errors->has('description') ? 'is-invalid' : (old('description') ? 'is-valid' : '') }}"
                                name="description" rows="6" placeholder="Nhập mô tả">{{ old('description') }}</textarea>

                            <div class="{{ $errors->has('description') ? 'invalid-feedback' : 'valid-feedback' }}">
                                @if ($errors->has('description'))
                                    {{ $errors->first('description') }}
                                @endif
                            </div>
                        </div>
                    </div>

                    <div class="card-footer">
                        <button class="btn btn-primary">
                            Thêm mới
                            <i class="bx bx-chevron-right ms-1"></i>
                        </button>
                        <a href="{{ route('admin.combos.index') }}" class="btn btn-danger" type="button"
                            onclick="return confirm('Bạn có chắc chắn hủy bỏ thao tác? Mọi thay đổi sẽ không được lưu')">
                            Hủy bỏ
                            <i class="bx bx-chevron-right ms-1"></i>
                        </a>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="mb-2">
                                            <label for="food-description" class="form-label">
                                                <span class="required">*</span>
                                                Hoạt động:
                                            </label>
                                            <div class="square-switch">
                                                <input type="checkbox" id="square-switch3" switch="bool" value="1"
                                                    name="is_active">
                                                <label for="square-switch3" data-on-label="Yes" data-off-label="No"></label>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-2">
                                    <label for="img_thumbnail" class="form-label"> <span class="text-danger">*</span>Hình
                                        ảnh</label>
                                    <input type="file" name="img_thumbnail" id="img_thumbnail"
                                        class="form-control {{ $errors->has('img_thumbnail') ? 'is-invalid' : (old('img_thumbnail') ? 'is-valid' : '') }}">
                                    <div
                                        class="{{ $errors->has('img_thumbnail') ? 'invalid-feedback' : 'valid-feedback' }}">
                                        @if ($errors->has('img_thumbnail'))
                                            {{ $errors->first('img_thumbnail') }}
                                        @endif
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </form>
@endsection

@section('script-libs')
<script src="https://code.jquery.com/jquery-3.6.0.min.js"
    integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
@endsection

@section('script')
    <script>
        $(document).ready(function () {
            let foodCount = 0; // Biến đếm số lượng món ăn được thêm vào
            const minFoodItems = 2; // Số lượng món ăn tối thiểu
            const maxFoodItems = 8; // Số lượng món ăn tối đa

            const foodList = $('#food_list'); // Lấy danh sách chứa các món ăn

            // Danh sách giá món ăn (Thay thế bằng dữ liệu thực tế)
            const foodPrices = @json($foodPrice->pluck('price', 'id'));

            // Hàm thêm món ăn vào danh sách
            function addFoodItem() {
                if (foodCount >= maxFoodItems) {
                    showAlert('warning ', 'Chỉ được thêm tối đa 8 món ăn' , 'AlphaCinema thông báo');
                    // alert('Chỉ được thêm tối đa ' + maxFoodItems + ' món ăn.');
                    return;
                }
                const id = 'food_' + Date.now(); // Tạo ID duy nhất cho món ăn
                const foodItemHtml = `
                        <div class="col-md-12 mb-3 food-item d-flex align-items-center justify-content-between p-3 border rounded" id="${id}_item">
                            <div class="col-md-6">
                                <label for="${id}_select" class="form-label">Đồ ăn</label>
                                <select name="combo_food[]" id="${id}_select" class="form-control food-select">
                                    <option value="">--Chọn đồ ăn--</option>
                                    @foreach ($food as $itemId => $itemName)
                                        <option value="{{ $itemId }}">{{ $itemName }}</option>
                                    @endforeach
                                </select>
                                <span class="text-danger" id="${id}_food_error"></span>
                            </div>

                            <div class="col-md-3 mx-4">
                                <label for="${id}" class="form-label align-items-center">Số lượng</label>
                                <div class="d-flex flex-wrap align-items-start">
                                    <div class="input-step step-primary full-width p-1 d-flex align-items-center border rounded">
                                        <button type="button" class="minuss btn btn-danger px-3 py-1">-</button>
                                        <input type="number" name="combo_quantity[]" class="food-quantity text-center border-0 mx-2"
                                            id="${id}" value="0" min="0" max="10" readonly>
                                        <button type="button" class="pluss btn btn-success px-3 py-1">+</button>
                                    </div>
                                </div>
                                <span class="text-danger" id="${id}_quantity_error"></span>
                            </div>

                            <div class="col-md-2 text-center">
                                <button type="button" class="btn btn-danger remove-food">
                                    <span class="bx bx-trash"></span>
                                </button>
                                </div>
                            </div>
                        </div>
                    `;

                foodList.append(foodItemHtml); // Thêm HTML vào danh sách món ăn
                foodCount++; // Tăng số lượng món ăn hiện tại

                updateEventHandlers(); // Cập nhật lại sự kiện cho các phần tử mới
                updateSelectOptions(); // Cập nhật danh sách món ăn đã chọn
                updateTotalPrice(); // Cập nhật tổng giá tiền
            }

            // Hàm xóa món ăn khỏi danh sách
            function removeFoodItem(foodItem) {
                if (foodCount > minFoodItems) {
                    foodItem.remove();
                    foodCount--;
                    updateTotalPrice();
                    updateSelectOptions();
                } else {
                    showAlert('warning ', 'Cần ít nhất 2 món ăn để tạo Combo!' , 'AlphaCinema thông báo');
                }
            }

            // Hàm cập nhật danh sách các món ăn đã chọn để tránh trùng lặp
            function updateSelectOptions() {
                const selectedValues = $('.food-select').map(function () {
                    return $(this).val();
                }).get().filter(value => value !== "");

                $('.food-select').each(function () {
                    const currentValue = $(this).val();
                    $(this).find('option').each(function () {
                        $(this).prop('disabled', $(this).val() !== currentValue && selectedValues.includes($(this).val()));
                    });
                });
            }

            // Hàm tính tổng giá tiền dựa trên số lượng và giá của món ăn
            function updateTotalPrice() {
                let totalPrice = 0;
                $('.food-item').each(function () {
                    const foodId = $(this).find('.food-select').val();
                    const quantity = parseInt($(this).find('.food-quantity').val()) || 0;

                    if (foodId && quantity > 0) {
                        totalPrice += (foodPrices[foodId] || 0) * quantity;
                    }
                });
                $('#price').val(totalPrice);
            }

            // Cập nhật sự kiện click khi nhấn nút tăng/giảm số lượng
            function updateEventHandlers() {
                // Xử lý tăng số lượng
                $('.pluss').off('click').on('click', function () {
                    let $quantityInput = $(this).siblings('.food-quantity'); // Lấy input số lượng
                    let currentValue = parseInt($quantityInput.val());
                    if (currentValue < 10) { // Giới hạn số lượng tối đa là 10
                        $quantityInput.val(currentValue + 1);
                        updateTotalPrice();
                    }
                });

                // Xử lý giảm số lượng
                $('.minuss').off('click').on('click', function () {
                    let $quantityInput = $(this).siblings('.food-quantity'); // Lấy input số lượng
                    let currentValue = parseInt($quantityInput.val());
                    if (currentValue > 0) {
                        $quantityInput.val(currentValue - 1);
                        updateTotalPrice();
                    }
                });

                // Xử lý chọn món ăn
                $('.food-select').off('change').on('change', updateSelectOptions);

                // Xóa món ăn
                $('.remove-food').off('click').on('click', function () {
                    removeFoodItem($(this).closest('.food-item'));
                });
            }

            // Gán sự kiện cho nút "Thêm món ăn"
            $('#add').on('click', addFoodItem);

            // Thêm sẵn 2 món ăn vào danh sách khi tải trang
            for (let i = 0; i < minFoodItems; i++) {
                addFoodItem();
            }

        $('#comboForm').on('submit', function (e) {
         let isValid = true; // Biến đánh dấu trạng thái hợp lệ của form

        // Kiểm tra mỗi phần tử food-select trong food list
        $('.food-select').each(function () {
            const foodItemError = $(this).siblings('.food-item').find('.text-danger');
            if ($(this).val() === '') {
                isValid = false; // Nếu chưa chọn món ăn, đặt trạng thái không hợp lệ
                foodItemError.text('Vui lòng chọn món ăn'); // Hiển thị lỗi
            } else {
                foodItemError.text(''); // Xóa lỗi nếu đã chọn món ăn
            }
            });

            // Nếu form không hợp lệ, ngừng submit
            if (!isValid) {
                e.preventDefault();
                showAlert('warning', 'Vui lòng chọn đồ ăn trước khi thêm mới!', 'Bạn chưa chọn đồ ăn');
            }
        });

    // Thêm sự kiện cho nút "Thêm món ăn" để đảm bảo sau khi thêm mới, món ăn phải được chọn
    $('#add').on('click', function () {
        // Xử lý thêm món ăn như đã thực hiện trước đó
        addFoodItem();

        // Validate ngay sau khi thêm món ăn
        $('.food-select').trigger('change');
    });

        // Validate các trường input
        $("#name").on("input", function () {
            let value = $(this).val().trim();
            if (value.length === 0) {
                $(this).removeClass("is-valid").addClass("is-invalid");
                $(this).next(".invalid-feedback").text("Tên combo không được để trống").show();
            } else {
                $(this).removeClass("is-invalid").addClass("is-valid");
                $(this).next(".invalid-feedback").hide();
            }
        });

        $("#price_sale").on("input", function () {
            let value = $(this).val().trim();
            if (!/^\d+(\.\d{1,2})?$/.test(value)) { // Chỉ chấp nhận số nguyên hoặc số thập phân
                $(this).removeClass("is-valid").addClass("is-invalid");
                $(this).next(".invalid-feedback").text("Giá bán Combo phải là số hợp lệ").show();
            } else {
                $(this).removeClass("is-invalid").addClass("is-valid");
                $(this).next(".invalid-feedback").hide();
            }
        });

        $("textarea[name='description']").on("input", function () {
            let value = $(this).val().trim();
            if (value.length === 0) {
                $(this).removeClass("is-valid").addClass("is-invalid");
                $(this).next(".invalid-feedback").text("Mô tả không được để trống").show();
            } else {
                $(this).removeClass("is-invalid").addClass("is-valid");
                $(this).next(".invalid-feedback").hide();
            }
        });

        $("#img_thumbnail").on("change", function () {
            let value = $(this).val().trim();
            if (value.length === 0) {
                $(this).removeClass("is-valid").addClass("is-invalid");
                $(this).next(".invalid-feedback").text("Vui lòng chọn ảnh").show();
            } else {
                $(this).removeClass("is-invalid").addClass("is-valid");
                $(this).next(".invalid-feedback").hide();
            }
        });

        // Validate giá gốc và giá bán Combo khi thay đổi
        $("#price, #price_sale").on("input", function () {
            let value = $(this).val();
            if (isNaN(value) || value <= 0) {
                $(this).removeClass("is-valid").addClass("is-invalid");
                $(this).next(".invalid-feedback").text("Vui lòng nhập giá hợp lệ").show();
            } else {
                $(this).removeClass("is-invalid").addClass("is-valid");
                $(this).next(".invalid-feedback").hide();
            }
        });
        });
    </script>
@endsection
